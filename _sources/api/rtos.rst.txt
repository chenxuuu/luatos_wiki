rtos
====

RTOS底层操作库

rtos.receive(timeout)
---------------------

接受并处理底层消息队列.

参数
~~~~

========== ==========================
传入值类型 解释
========== ==========================
int        超时时长,通常是-1,永久等待
========== ==========================

返回值
~~~~~~

========== ==========================
返回值类型 解释
========== ==========================
int        超时时长,通常是-1,永久等待
========== ==========================

.. _返回值-1:

返回值
~~~~~~

.. code:: lua

   无

--------------

rtos.timer_start(id,timeout,_repeat)
------------------------------------

启动一个定时器

.. _参数-1:

参数
~~~~

========== =================
传入值类型 解释
========== =================
int        定时器id
int        超时时长,单位毫秒
int        重复次数,默认是0
========== =================

.. _返回值-2:

返回值
~~~~~~

========== =================
返回值类型 解释
========== =================
int        定时器id
int        超时时长,单位毫秒
int        重复次数,默认是0
========== =================

.. _返回值-3:

返回值
~~~~~~

.. code:: lua

   -- 用户代码请使用 sys.timerStart
   -- 启动一个3秒的循环定时器
   rtos.timer_start(10000, 3000, -1)

--------------

rtos.timer_stop(id)
-------------------

关闭并释放一个定时器

.. _参数-2:

参数
~~~~

========== ========
传入值类型 解释
========== ========
int        定时器id
========== ========

.. _返回值-4:

返回值
~~~~~~

========== ========
返回值类型 解释
========== ========
int        定时器id
========== ========

.. _返回值-5:

返回值
~~~~~~

.. code:: lua

   -- 用户代码请使用sys.timerStop
   rtos.timer_stop(100000)

--------------

rtos.reboot()
-------------

设备重启

.. _参数-3:

参数
~~~~

无

.. _返回值-6:

返回值
~~~~~~

========== ====
返回值类型 解释
========== ====
========== ====

.. _返回值-7:

返回值
~~~~~~

.. code:: lua

   无

--------------

rtos.buildDate()
----------------

获取固件编译日期

.. _参数-4:

参数
~~~~

无

.. _返回值-8:

返回值
~~~~~~

========== ====
返回值类型 解释
========== ====
========== ====

.. _返回值-9:

返回值
~~~~~~

.. code:: lua

   -- 获取编译日期
   local d = rtos.buildDate()

--------------

rtos.bsp()
----------

获取硬件bsp型号

.. _参数-5:

参数
~~~~

无

.. _返回值-10:

返回值
~~~~~~

========== ====
返回值类型 解释
========== ====
========== ====

.. _返回值-11:

返回值
~~~~~~

.. code:: lua

   -- 获取编译日期
   local bsp = rtos.bsp()

--------------

rtos.version()
--------------

获取固件版本号

.. _参数-6:

参数
~~~~

无

.. _返回值-12:

返回值
~~~~~~

========== ====
返回值类型 解释
========== ====
========== ====

.. _返回值-13:

返回值
~~~~~~

.. code:: lua

   -- 读取版本号
   local luatos_version = rtos.version()

--------------

rtos.standy(timeout)
--------------------

进入待机模式(部分设备可用,例如w60x)

.. _参数-7:

参数
~~~~

========== =================
传入值类型 解释
========== =================
int        休眠时长,单位毫秒
========== =================

.. _返回值-14:

返回值
~~~~~~

========== =================
返回值类型 解释
========== =================
int        休眠时长,单位毫秒
========== =================

.. _返回值-15:

返回值
~~~~~~

.. code:: lua

   -- 读取版本号
   local luatos_version = rtos.version()

--------------

rtos.meminfo(type)
------------------

获取内存信息

.. _参数-8:

参数
~~~~

========== ===================================================
传入值类型 解释
========== ===================================================
type       “sys”系统内存, “lua”虚拟机内存, 默认为lua虚拟机内存
========== ===================================================

.. _返回值-16:

返回值
~~~~~~

========== ===================================================
返回值类型 解释
========== ===================================================
type       “sys”系统内存, “lua”虚拟机内存, 默认为lua虚拟机内存
========== ===================================================

.. _返回值-17:

返回值
~~~~~~

.. code:: lua

   -- 打印内存占用
   log.info("mem.lua", rtos.meminfo())
   log.info("mem.sys", rtos.meminfo("sys"))

--------------

rtos.firmware()
---------------

返回底层描述信息,格式为
LuatOS\_\ :math:`VERSION_`\ BSP,可用于OTA升级判断底层信息

.. _参数-9:

参数
~~~~

无

.. _返回值-18:

返回值
~~~~~~

========== ====
返回值类型 解释
========== ====
========== ====

.. _返回值-19:

返回值
~~~~~~

.. code:: lua

   -- 打印底层描述信息
   log.info("firmware", rtos.firmware())

--------------
